---
  - name: Ansible Playbook
    hosts: all
    become: true
    pre_tasks:
      - name: Update cache 
        apt:
          update_cache: yes

      - name: install some plugin
        apt: 
         name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2']
         state: present
         update_cache: yes
    tasks:
  
      - name: disable swapping
        shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

      - name: kernel modules 1
        shell: modprobe overlay
        
      - name: kernel modules 2
        shell: modprobe br_netfilter

      - name: kernel modules K8s
        shell:   cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
                 overlay
                 br_netfilter
                 EOF

      - name: IPtables setup 
        shell:    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
                  net.bridge.bridge-nf-call-iptables  = 1
                  net.bridge.bridge-nf-call-ip6tables = 1
                  net.ipv4.ip_forward                 = 1
                  EOF   

      - name: Load the system 
        shell: sysctl --system  

      - name: presetup containerd
        copy:
          content: ""
          dest: /etc/modules-load.d/containerd.conf 
          force: no
          group: root
          owner: root
          mode: 0644  

      - name: Setup kernel modules (containerd)
        lineinfile:
          dest: /etc/modules-load.d/containerd.conf
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
        with_items:
        - { regexp: 'overlay', line: 'overlay' }
        - { regexp: 'br_netfilter', line: 'br_netfilter' }      

      - name: Install Docker apt key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present

      - name: Add containerd repository
        apt_repository:
          repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
          state: present
          update_cache: true
      - name: Install containerd
        apt: 
          name: containerd.io
          #name: containerd.io=1.4.6-1
          update_cache: true
          state: present 

      - name: Ensure containerd is initialized
        shell: containerd config default > /etc/containerd/config.toml

      - name: Set containerd options
        lineinfile:
          path: /etc/containerd/config.toml
          insertafter: '^(\s+)\[plugins.+\w\.runc\.options\]'
          line: '            SystemdCgroup = true'
        
      - name: Start containerd service
        service:
          name: containerd
          state: started   
      - name: enable containerd service
        service:
          name: containerd
          enabled: yes 
      - name: Install Kubernetes apt key
        apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present

      - name: Add Kubernetes repository
        apt_repository:
          repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
          state: present
          update_cache: true 

      - name: Install Kubernetes tools
        apt: 
          name: ['kubelet=1.24.0-00', 'kubeadm=1.24.0-00', 'kubectl=1.24.0-00', 'open-iscsi']
          update_cache: true
          state: present  

  - name: initialize cluster using kubeadm 
  - hosts: master
    become: true
    tasks:
        - name: runnig kubeadm init 
          shell: kubeadm init --pod-network-cidr=10.244.0.0/16      
